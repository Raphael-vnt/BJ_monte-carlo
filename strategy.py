# strategy.py

import random

BASIC_STRATEGY_HARD = {
    # Hard totals strategy table
    (8, 2): 'H', (8, 3): 'H', (8, 4): 'H', (8, 5): 'H', (8, 6): 'H', (8, 7): 'H', (8, 8): 'H', (8, 9): 'H', (8, 10): 'H', (8, 'A'): 'H',
    (9, 2): 'H', (9, 3): 'D', (9, 4): 'D', (9, 5): 'D', (9, 6): 'D', (9, 7): 'H', (9, 8): 'H', (9, 9): 'H', (9, 10): 'H', (9, 'A'): 'H',
    (10, 2): 'D', (10, 3): 'D', (10, 4): 'D', (10, 5): 'D', (10, 6): 'D', (10, 7): 'D', (10, 8): 'D', (10, 9): 'D', (10, 10): 'H', (10, 'A'): 'H',
    (11, 2): 'D', (11, 3): 'D', (11, 4): 'D', (11, 5): 'D', (11, 6): 'D', (11, 7): 'D', (11, 8): 'D', (11, 9): 'D', (11, 10): 'D', (11, 'A'): 'H',
    (12, 2): 'H', (12, 3): 'H', (12, 4): 'S', (12, 5): 'S', (12, 6): 'S', (12, 7): 'H', (12, 8): 'H', (12, 9): 'H', (12, 10): 'H', (12, 'A'): 'H',
    (13, 2): 'S', (13, 3): 'S', (13, 4): 'S', (13, 5): 'S', (13, 6): 'S', (13, 7): 'H', (13, 8): 'H', (13, 9): 'H', (13, 10): 'H', (13, 'A'): 'H',
    (14, 2): 'S', (14, 3): 'S', (14, 4): 'S', (14, 5): 'S', (14, 6): 'S', (14, 7): 'H', (14, 8): 'H', (14, 9): 'H', (14, 10): 'H', (14, 'A'): 'H',
    (15, 2): 'S', (15, 3): 'S', (15, 4): 'S', (15, 5): 'S', (15, 6): 'S', (15, 7): 'H', (15, 8): 'H', (15, 9): 'H', (15, 10): 'H', (15, 'A'): 'H',
    (16, 2): 'S', (16, 3): 'S', (16, 4): 'S', (16, 5): 'S', (16, 6): 'S', (16, 7): 'H', (16, 8): 'H', (16, 9): 'H', (16, 10): 'H', (16, 'A'): 'H',
    (17, 2): 'S', (17, 3): 'S', (17, 4): 'S', (17, 5): 'S', (17, 6): 'S', (17, 7): 'S', (17, 8): 'S', (17, 9): 'S', (17, 10): 'S', (17, 'A'): 'S',
    (18, 2): 'S', (18, 3): 'S', (18, 4): 'S', (18, 5): 'S', (18, 6): 'S', (18, 7): 'S', (18, 8): 'S', (18, 9): 'S', (18, 10): 'S', (18, 'A'): 'S',
    (19, 2): 'S', (19, 3): 'S', (19, 4): 'S', (19, 5): 'S', (19, 6): 'S', (19, 7): 'S', (19, 8): 'S', (19, 9): 'S', (19, 10): 'S', (19, 'A'): 'S',
    (20, 2): 'S', (20, 3): 'S', (20, 4): 'S', (20, 5): 'S', (20, 6): 'S', (20, 7): 'S', (20, 8): 'S', (20, 9): 'S', (20, 10): 'S', (20, 'A'): 'S',
    (21, 2): 'S', (21, 3): 'S', (21, 4): 'S', (21, 5): 'S', (21, 6): 'S', (21, 7): 'S', (21, 8): 'S', (21, 9): 'S', (21, 10): 'S', (21, 'A'): 'S',
}

BASIC_STRATEGY_SOFT = {
    # Soft totals strategy table
    (13, 2): 'H', (13, 3): 'H', (13, 4): 'H', (13, 5): 'D', (13, 6): 'D', (13, 7): 'H', (13, 8): 'H', (13, 9): 'H', (13, 10): 'H', (13, 'A'): 'H',
    (14, 2): 'H', (14, 3): 'H', (14, 4): 'H', (14, 5): 'D', (14, 6): 'D', (14, 7): 'H', (14, 8): 'H', (14, 9): 'H', (14, 10): 'H', (14, 'A'): 'H',
    (15, 2): 'H', (15, 3): 'H', (15, 4): 'D', (15, 5): 'D', (15, 6): 'D', (15, 7): 'H', (15, 8): 'H', (15, 9): 'H', (15, 10): 'H', (15, 'A'): 'H',
    (16, 2): 'H', (16, 3): 'H', (16, 4): 'D', (16, 5): 'D', (16, 6): 'D', (16, 7): 'H', (16, 8): 'H', (16, 9): 'H', (16, 10): 'H', (16, 'A'): 'H',
    (17, 2): 'H', (17, 3): 'D', (17, 4): 'D', (17, 5): 'D', (17, 6): 'D', (17, 7): 'H', (17, 8): 'H', (17, 9): 'H', (17, 10): 'H', (17, 'A'): 'H',
    (18, 2): 'S', (18, 3): 'D', (18, 4): 'D', (18, 5): 'D', (18, 6): 'D', (18, 7): 'S', (18, 8): 'S', (18, 9): 'H', (18, 10): 'H', (18, 'A'): 'H',
    (19, 2): 'S', (19, 3): 'S', (19, 4): 'S', (19, 5): 'S', (19, 6): 'D', (19, 7): 'S', (19, 8): 'S', (19, 9): 'S', (19, 10): 'S', (19, 'A'): 'S',
    (20, 2): 'S', (20, 3): 'S', (20, 4): 'S', (20, 5): 'S', (20, 6): 'S', (20, 7): 'S', (20, 8): 'S', (20, 9): 'S', (20, 10): 'S', (20, 'A'): 'S',
    (21, 2): 'S', (21, 3): 'S', (21, 4): 'S', (21, 5): 'S', (21, 6): 'S', (21, 7): 'S', (21, 8): 'S', (21, 9): 'S', (21, 10): 'S', (21, 'A'): 'S',
}

BASIC_STRATEGY_PAIR = {
    # Pair splitting strategy table
    (2, 2): 'SP', (2, 3): 'SP', (2, 4): 'H', (2, 5): 'H', (2, 6): 'SP', (2, 7): 'SP', (2, 8): 'H', (2, 9): 'H', (2, 10): 'H', (2, 'A'): 'H',
    (3, 2): 'SP', (3, 3): 'SP', (3, 4): 'H', (3, 5): 'H', (3, 6): 'SP', (3, 7): 'SP', (3, 8): 'H', (3, 9): 'H', (3, 10): 'H', (3, 'A'): 'H',
    (4, 2): 'H', (4, 3): 'H', (4, 4): 'H', (4, 5): 'SP', (4, 6): 'SP', (4, 7): 'H', (4, 8): 'H', (4, 9): 'H', (4, 10): 'H', (4, 'A'): 'H',
    (5, 2): 'D', (5, 3): 'D', (5, 4): 'D', (5, 5): 'D', (5, 6): 'D', (5, 7): 'D', (5, 8): 'D', (5, 9): 'H', (5, 10): 'H', (5, 'A'): 'H',
    (6, 2): 'SP', (6, 3): 'SP', (6, 4): 'SP', (6, 5): 'SP', (6, 6): 'SP', (6, 7): 'H', (6, 8): 'H', (6, 9): 'H', (6, 10): 'H', (6, 'A'): 'H',
    (7, 2): 'SP', (7, 3): 'SP', (7, 4): 'SP', (7, 5): 'SP', (7, 6): 'SP', (7, 7): 'SP', (7, 8): 'H', (7, 9): 'H', (7, 10): 'H', (7, 'A'): 'H',
    (8, 2): 'SP', (8, 3): 'SP', (8, 4): 'SP', (8, 5): 'SP', (8, 6): 'SP', (8, 7): 'SP', (8, 8): 'SP', (8, 9): 'SP', (8, 10): 'SP', (8, 'A'): 'SP',
    (9, 2): 'SP', (9, 3): 'SP', (9, 4): 'SP', (9, 5): 'SP', (9, 6): 'SP', (9, 7): 'S', (9, 8): 'SP', (9, 9): 'SP', (9, 10): 'S', (9, 'A'): 'S',
    (10, 2): 'S', (10, 3): 'S', (10, 4): 'S', (10, 5): 'S', (10, 6): 'S', (10, 7): 'S', (10, 8): 'S', (10, 9): 'S', (10, 10): 'S', (10, 'A'): 'S',
    ('A', 2): 'SP', ('A', 3): 'SP', ('A', 4): 'SP', ('A', 5): 'SP', ('A', 6): 'SP', ('A', 7): 'SP', ('A', 8): 'SP', ('A', 9): 'SP', ('A', 10): 'SP', ('A', 'A'): 'SP',
}

def basic_strategy(hand, dealer_card):
    player_total = hand.value
    dealer_value = dealer_card.value
    dealer_value = dealer_value if dealer_value <11 else 'A'
    if hand.is_pair():
        if hand.has_ace():
          return 'SP'
        return BASIC_STRATEGY_PAIR[(hand.cards[0].value, dealer_value)]

    elif hand.has_ace() and player_total <= 21 and len(hand.value_ace) == 2:
        return BASIC_STRATEGY_SOFT[(player_total, dealer_value)]

    else:
        if player_total <=8 :
          return 'H'
        return BASIC_STRATEGY_HARD[(player_total, dealer_value)]


def random_strategy(hand=None, dealer_card=None):
  return random.choice(['S', 'H'])